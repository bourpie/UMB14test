@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Web
@using Umbraco.Extensions
@using Umbraco.Cms.Core.Models
@using System.Threading
@inject IUmbracoContextAccessor UmbracoContextAccessor

@{
    var currentCulture = Thread.CurrentThread.CurrentCulture;
    var language = currentCulture.TwoLetterISOLanguageName;
    var path = language == "fr" ? "/en" : "/";
    var langueLabel = language == "fr" ? "English" : "Français";

    // Récupérer le nœud racine
    var umbracoContext = UmbracoContextAccessor.GetRequiredUmbracoContext();
    var rootNode = umbracoContext.Content.GetAtRoot().FirstOrDefault();

    // Exemple de récupération de propriétés du nœud racine
    var nomDuSite = rootNode?.Value<string>("nomDuSite") ?? string.Empty;
    var contact = rootNode?.Value<Link>("contactUrl");

    // Récupérer le nœud racine de type "page"
    var navigationRootNode = umbracoContext.Content.GetAtRoot().FirstOrDefault(x => x.ContentType.Alias == "page");
    
    // Récupérer les enfants du nœud racine de type "page"
    var pageNodes = navigationRootNode?.Children.Where(x => x.ContentType.Alias == "page") ?? Enumerable.Empty<IPublishedContent>();

    // Récupérer l'URL de la page courante
    var currentUrl = UmbracoContextAccessor.GetRequiredUmbracoContext().PublishedRequest.PublishedContent.Url();
}

@functions {
    // Méthode pour afficher les sous-menus de manière récursive
    void RenderSubMenu(IPublishedContent node)
    {
        var currentUrl = UmbracoContextAccessor.GetRequiredUmbracoContext().PublishedRequest.PublishedContent.Url();
        if (node.Children != null && node.Children.Any())
        {
          <button>
            <span class="lnr lnr-chevron-down"></span>
          </button>
            <ul>
                @foreach (var child in node.Children)
                {
                    // Vérifier si le lien est actif
                    bool isActive = child.Url() == currentUrl;
                    <li>
                        <a href="@child.Url()"
                           @(isActive ? "aria-current=\"page\"" : null)>
                            @child.Name
                        </a>
                        @{RenderSubMenu(child);}
                    </li>
                }
            </ul>
        }
    }
}

<qc-header 
    titre="@nomDuSite"
    btnlabel="Ouvrir la recherche"
    contacturl="@contact?.Url"
    langueurl="@path"
    langueLabel="@langueLabel"
></qc-header>

<qc-navigation>
    @if (pageNodes.Any())
    {
        <ul>
            @foreach (var pageNode in pageNodes)
            {
                // Vérifier si le lien est actif
                bool isActive = pageNode.Url() == currentUrl;
                <li>
                    <a href="@pageNode.Url()"
                       @(isActive ? "aria-current=\"page\"" : null)>
                        @pageNode.Name
                    </a>
                    @{RenderSubMenu(pageNode);}
                </li>
            }
        </ul>
    }
    else
    {
        <p>Aucun élément de navigation trouvé.</p>
    }
</qc-navigation>
